services:
  service:
    container_name: mathesar
    image: mathesar/mathesar:latest
    environment:
      SECRET_KEY: ${SECRET_KEY:?}
      DOMAIN_NAME: ${DOMAIN_NAME:-http://localhost}
      POSTGRES_DB: ${POSTGRES_DB:-mathesar_django}
      POSTGRES_USER: ${POSTGRES_USER:-mathesar}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mathesar}
      POSTGRES_HOST: ${POSTGRES_HOST:-mathesar_db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      DJANGO_SETTINGS_MODULE: config.settings.production
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      DEBUG: false
    volumes:
      - msar_static:/code/static
      - msar_media:/code/media
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:8000
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 5s
    expose:
      - "8000"
    ports:
      - ${HOST_PORT:-8000}:8000
    networks:
      - internal_network
      - proxy_network
  db:
    image: pgautoupgrade/pgautoupgrade:17-bookworm
    container_name: mathesar_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mathesar_django}
      POSTGRES_USER: ${POSTGRES_USER:-mathesar}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mathesar}
      POSTGRES_HOST: ${POSTGRES_HOST:-mathesar_db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
    expose:
      - "5432"
    volumes:
      - msar_pgdata:/var/lib/postgresql/data
    networks:
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mathesar}"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  msar_static:
  msar_media:
  msar_pgdata:
networks:
  internal_network:
    internal: true
  proxy_network:
    name: proxy_network
    external: true
