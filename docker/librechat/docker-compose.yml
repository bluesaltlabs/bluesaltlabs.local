services:

  # LibreChat
  api:
    container_name: librechat
    image: ghcr.io/danny-avila/librechat-dev-api:latest
    ports:
      - "${PORT}:${PORT}"
    restart: always
    networks:
      - proxy_network
      - librechat_network
    volumes:
      - librechat_images:/app/client/public/images
      - librechat_uploads:/app/uploads/temp
      - librechat_api_logs:/app/api/logs/
      - librechat_app_data:/app/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3080/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Meilisearch
  meilisearch:
    container_name: librechat_meilisearch
    image: getmeili/meilisearch:latest
    ports:
      - 7700:7700
    networks:
      - librechat_network
    restart: always
    volumes:
      - librechat_meili_data:/meili_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  #Vectordb
  vectordb:
    container_name: librechat_vectordb
    image: ankane/pgvector:latest
    restart: always
    environment:
      POSTGRES_DB: librechat
      POSTGRES_USER: librechat
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - librechat_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - librechat_network

  #RAG API
  rag_api:
    container_name: librechat_rag_api
    image: ghcr.io/danny-avila/librechat-rag-api-dev:latest
    restart: always
    environment:
      - DB_HOST=vectordb
      - DB_PORT=5432
      - POSTGRES_DB=librechat
      - POSTGRES_USER=librechat
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
    ports:
      - "8008:8000"
    networks:
      - librechat_network
    depends_on:
      - vectordb

volumes:
  librechat_meili_data:
  librechat_images:
  librechat_uploads:
  librechat_api_logs:
  librechat_app_data:
  librechat_db:
networks:
  librechat_network:
    internal: true
  proxy_network:
    name: proxy_network
    external: true
